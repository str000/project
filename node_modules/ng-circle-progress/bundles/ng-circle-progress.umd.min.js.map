{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ng-circle-progress/src/lib/ng-circle-progress.component.ts","../../../projects/ng-circle-progress/src/lib/ng-circle-progress.module.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","this","class","backgroundGradient","backgroundColor","backgroundGradientStopColor","backgroundOpacity","backgroundStroke","backgroundStrokeWidth","backgroundPadding","percent","radius","space","toFixed","maxPercent","renderOnClick","units","unitsFontSize","unitsFontWeight","unitsColor","outerStrokeGradient","outerStrokeWidth","outerStrokeColor","outerStrokeGradientStopColor","outerStrokeLinecap","innerStrokeColor","innerStrokeWidth","titleFormat","undefined","title","titleColor","titleFontSize","titleFontWeight","subtitleFormat","subtitle","subtitleColor","subtitleFontSize","subtitleFontWeight","imageSrc","imageHeight","imageWidth","animation","animateTitle","animateSubtitle","animationDuration","showTitle","showSubtitle","showUnits","showImage","showBackground","showInnerStroke","clockwise","responsive","startFromZero","showZeroOuterStroke","lazy","CircleProgressComponent","defaultOptions","elRef","document","_this","onClick","EventEmitter","svgElement","isInViewport","onViewportChanged","_viewportChangedSubscriber","options","CircleProgressOptions","_lastPercent","_gradientUUID","render","applyOptions","draw","animate","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadius","Math","PI","x","sin","y","cos","circlePercent","abs","boxSize","max","largeArcFlag","sweepFlag","centre","startPoint","endPoint","_a","_b","titlePercent","titleTextPercent","subtitlePercent","textAnchor","color","fontSize","fontWeight","texts","tspans","constructor","name","formatted","Array","toString","text","rowCount","rowNum","_e","_f","span","dy","getRelativeY","_g","_h","uuid","svg","viewBox","width","height","backgroundCircle","cx","cy","fill","fillOpacity","stroke","strokeWidth","path","d","strokeLinecap","circle","image","src","outerLinearGradient","id","colorStop1","colorStop2","radialGradient","getAnimationParameters","previousPercent","currentPercent","times","step","interval","fromPercent","toPercent","min","delta","round","_timerSubscription","closed","unsubscribe","count","timer","subscribe","emitClickEvent","event","emit","keys","_c","hasOwnProperty","templateOptions","a","b","dt","Date","getTime","replace","c","random","floor","findSvgElement","tags","nativeElement","getElementsByTagName","checkViewport","previousValue","isElementInViewport","oldValue","newValue","onScroll","loadEventsForLazyMode","addEventListener","window","_timer_1","unloadEventsForLazyMode","removeEventListener","defaultView","assign","prototype","isDrawing","el","parentRect","rect","getBoundingClientRect","parent","parentNode","top","bottom","left","right","body","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","ngOnInit","ngOnDestroy","ngOnChanges","changes","currentValue","Component","args","selector","template","ElementRef","Inject","DOCUMENT","Output","Input","NgCircleProgressModule","forRoot","ngModule","providers","provide","useValue","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, Output, Inject, OnInit, OnDestroy, ElementRef, SimpleChanges } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subscription, timer } from 'rxjs';\n\nexport interface CircleProgressOptionsInterface {\n    class?: string;\n    backgroundGradient?: boolean;\n    backgroundColor?: string;\n    backgroundGradientStopColor?: string;\n    backgroundOpacity?: number;\n    backgroundStroke?: string;\n    backgroundStrokeWidth?: number;\n    backgroundPadding?: number;\n    percent?: number;\n    radius?: number;\n    space?: number;\n    toFixed?: number;\n    maxPercent?: number;\n    renderOnClick?: boolean;\n    units?: string;\n    unitsFontSize?: string;\n    unitsFontWeight?: string;\n    unitsColor?: string;\n    outerStrokeGradient?: boolean;\n    outerStrokeWidth?: number;\n    outerStrokeColor?: string;\n    outerStrokeGradientStopColor?: string;\n    outerStrokeLinecap?: string;\n    innerStrokeColor?: string;\n    innerStrokeWidth?: number;\n    titleFormat?: Function;\n    title?: string | Array<String>;\n    titleColor?: string;\n    titleFontSize?: string;\n    titleFontWeight?: string;\n    subtitleFormat?: Function;\n    subtitle?: string | Array<String>;\n    subtitleColor?: string;\n    subtitleFontSize?: string;\n    subtitleFontWeight?: string;\n    imageSrc?: string;\n    imageHeight?: number;\n    imageWidth?: number;\n    animation?: boolean;\n    animateTitle?: boolean;\n    animateSubtitle?: boolean;\n    animationDuration?: number;\n    showTitle?: boolean;\n    showSubtitle?: boolean;\n    showUnits?: boolean;\n    showImage?: boolean;\n    showBackground?: boolean;\n    showInnerStroke?: boolean;\n    clockwise?: boolean;\n    responsive?: boolean;\n    startFromZero?: boolean;\n    showZeroOuterStroke?: boolean;\n    lazy?: boolean;\n}\n\nexport class CircleProgressOptions implements CircleProgressOptionsInterface {\n    class = '';\n    backgroundGradient = false;\n    backgroundColor = 'transparent';\n    backgroundGradientStopColor = 'transparent';\n    backgroundOpacity = 1;\n    backgroundStroke = 'transparent';\n    backgroundStrokeWidth = 0;\n    backgroundPadding = 5;\n    percent = 0;\n    radius = 90;\n    space = 4;\n    toFixed = 0;\n    maxPercent = 1000;\n    renderOnClick = true;\n    units = '%';\n    unitsFontSize = '10';\n    unitsFontWeight = 'normal';\n    unitsColor = '#444444';\n    outerStrokeGradient = false;\n    outerStrokeWidth = 8;\n    outerStrokeColor = '#78C000';\n    outerStrokeGradientStopColor = 'transparent';\n    outerStrokeLinecap = 'round';\n    innerStrokeColor = '#C7E596';\n    innerStrokeWidth = 4;\n    titleFormat = undefined;\n    title: string | Array<String> = 'auto';\n    titleColor = '#444444';\n    titleFontSize = '20';\n    titleFontWeight = 'normal';\n    subtitleFormat = undefined;\n    subtitle: string | Array<String> = 'progress';\n    subtitleColor = '#A9A9A9';\n    subtitleFontSize = '10';\n    subtitleFontWeight = 'normal';\n    imageSrc = undefined;\n    imageHeight = undefined;\n    imageWidth = undefined;\n    animation = true;\n    animateTitle = true;\n    animateSubtitle = false;\n    animationDuration = 500;\n    showTitle = true;\n    showSubtitle = true;\n    showUnits = true;\n    showImage = false;\n    showBackground = true;\n    showInnerStroke = true;\n    clockwise = true;\n    responsive = false;\n    startFromZero = true;\n    showZeroOuterStroke = true;\n    lazy = false;\n}\n\n/** @dynamic Prevent compiling error when using type `Document` https://github.com/angular/angular/issues/20351 */\n@Component({\n    selector: 'circle-progress',\n    template: `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"svg\"\n             [attr.viewBox]=\"svg.viewBox\" preserveAspectRatio=\"xMidYMid meet\"\n             [attr.height]=\"svg.height\" [attr.width]=\"svg.width\" (click)=\"emitClickEvent($event)\" [attr.class]=\"options.class\">\n            <defs>\n                <linearGradient *ngIf=\"options.outerStrokeGradient\" [attr.id]=\"svg.outerLinearGradient.id\">\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop1\"  [attr.stop-opacity]=\"1\"/>\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\n                </linearGradient>\n                <radialGradient *ngIf=\"options.backgroundGradient\" [attr.id]=\"svg.radialGradient.id\">\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.radialGradient.colorStop1\" [attr.stop-opacity]=\"1\"/>\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.radialGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\n                </radialGradient>\n            </defs>\n            <ng-container *ngIf=\"options.showBackground\">\n                <circle *ngIf=\"!options.backgroundGradient\"\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\n                        [attr.r]=\"svg.backgroundCircle.r\"\n                        [attr.fill]=\"svg.backgroundCircle.fill\"\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\n                <circle *ngIf=\"options.backgroundGradient\"\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\n                        [attr.r]=\"svg.backgroundCircle.r\"\n                        attr.fill=\"url(#{{svg.radialGradient.id}})\"\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\n            </ng-container>            \n            <circle *ngIf=\"options.showInnerStroke\"\n                    [attr.cx]=\"svg.circle.cx\"\n                    [attr.cy]=\"svg.circle.cy\"\n                    [attr.r]=\"svg.circle.r\"\n                    [attr.fill]=\"svg.circle.fill\"\n                    [attr.stroke]=\"svg.circle.stroke\"\n                    [attr.stroke-width]=\"svg.circle.strokeWidth\"/>\n            <ng-container *ngIf=\"+options.percent!==0 || options.showZeroOuterStroke\">\n                <path *ngIf=\"!options.outerStrokeGradient\"\n                        [attr.d]=\"svg.path.d\"\n                        [attr.stroke]=\"svg.path.stroke\"\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\n                        [attr.fill]=\"svg.path.fill\"/>\n                <path *ngIf=\"options.outerStrokeGradient\"\n                        [attr.d]=\"svg.path.d\"\n                        attr.stroke=\"url(#{{svg.outerLinearGradient.id}})\"\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\n                        [attr.fill]=\"svg.path.fill\"/>\n            </ng-container>\n            <text *ngIf=\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\"\n                  alignment-baseline=\"baseline\"\n                  [attr.x]=\"svg.circle.cx\"\n                  [attr.y]=\"svg.circle.cy\"\n                  [attr.text-anchor]=\"svg.title.textAnchor\">\n                <ng-container *ngIf=\"options.showTitle\">\n                    <tspan *ngFor=\"let tspan of svg.title.tspans\"\n                           [attr.x]=\"svg.title.x\"\n                           [attr.y]=\"svg.title.y\"\n                           [attr.dy]=\"tspan.dy\"\n                           [attr.font-size]=\"svg.title.fontSize\"\n                           [attr.font-weight]=\"svg.title.fontWeight\"\n                           [attr.fill]=\"svg.title.color\">{{tspan.span}}</tspan>\n                </ng-container>\n                <tspan *ngIf=\"options.showUnits\"\n                       [attr.font-size]=\"svg.units.fontSize\"\n                       [attr.font-weight]=\"svg.units.fontWeight\"\n                       [attr.fill]=\"svg.units.color\">{{svg.units.text}}</tspan>\n                <ng-container *ngIf=\"options.showSubtitle\">\n                    <tspan *ngFor=\"let tspan of svg.subtitle.tspans\"\n                           [attr.x]=\"svg.subtitle.x\"\n                           [attr.y]=\"svg.subtitle.y\"\n                           [attr.dy]=\"tspan.dy\"\n                           [attr.font-size]=\"svg.subtitle.fontSize\"\n                           [attr.font-weight]=\"svg.subtitle.fontWeight\"\n                           [attr.fill]=\"svg.subtitle.color\">{{tspan.span}}</tspan>\n                </ng-container>\n            </text>\n            <image *ngIf=\"options.showImage\" preserveAspectRatio=\"none\" \n                [attr.height]=\"svg.image.height\"\n                [attr.width]=\"svg.image.width\"\n                [attr.xlink:href]=\"svg.image.src\"\n                [attr.x]=\"svg.image.x\"\n                [attr.y]=\"svg.image.y\"\n            />\n        </svg>\n    `\n})\nexport class CircleProgressComponent implements OnChanges, OnInit, OnDestroy {\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Input() name: string;\n    @Input() class: string;\n    @Input() backgroundGradient: boolean;\n    @Input() backgroundColor: string;\n    @Input() backgroundGradientStopColor: String;\n    @Input() backgroundOpacity: number;\n    @Input() backgroundStroke: string;\n    @Input() backgroundStrokeWidth: number;\n    @Input() backgroundPadding: number;\n\n    @Input() radius: number;\n    @Input() space: number;\n    @Input() percent: number;\n    @Input() toFixed: number;\n    @Input() maxPercent: number;\n    @Input() renderOnClick: boolean;\n\n    @Input() units: string;\n    @Input() unitsFontSize: string;\n    @Input() unitsFontWeight: string;\n    @Input() unitsColor: string;\n\n    @Input() outerStrokeGradient: boolean;\n    @Input() outerStrokeWidth: number;\n    @Input() outerStrokeColor: string;\n    @Input() outerStrokeGradientStopColor: String;\n    @Input() outerStrokeLinecap: string;\n\n    @Input() innerStrokeColor: string;\n    @Input() innerStrokeWidth: string | number;\n\n    @Input() titleFormat: Function;\n    @Input() title: string | Array<String>;\n    @Input() titleColor: string;\n    @Input() titleFontSize: string;\n    @Input() titleFontWeight: string;\n\n    @Input() subtitleFormat: Function;\n    @Input() subtitle: string | string[];\n    @Input() subtitleColor: string;\n    @Input() subtitleFontSize: string;\n    @Input() subtitleFontWeight: string;\n\n    @Input() imageSrc: string;\n    @Input() imageHeight: number;\n    @Input() imageWidth: number;\n\n    @Input() animation: boolean;\n    @Input() animateTitle: boolean;\n    @Input() animateSubtitle: boolean;\n    @Input() animationDuration: number;\n\n    @Input() showTitle: boolean;\n    @Input() showSubtitle: boolean;\n    @Input() showUnits: boolean;\n    @Input() showImage: boolean;\n    @Input() showBackground: boolean;\n    @Input() showInnerStroke: boolean;\n    @Input() clockwise: boolean;\n    @Input() responsive: boolean;\n    @Input() startFromZero: boolean;\n    @Input() showZeroOuterStroke: boolean;\n\n    @Input() lazy: boolean;\n\n    @Input('options') templateOptions: CircleProgressOptions;\n\n    // <svg> of component\n    svgElement: HTMLElement = null;\n    // whether <svg> is in viewport\n    isInViewport: Boolean = false;\n    // event for notifying viewport change caused by scrolling or resizing\n    onViewportChanged: EventEmitter<{ oldValue: Boolean, newValue: Boolean }> = new EventEmitter;\n    window: Window;\n    _viewportChangedSubscriber: Subscription = null;\n\n    svg: any;\n\n    options: CircleProgressOptions = new CircleProgressOptions();\n    defaultOptions: CircleProgressOptions = new CircleProgressOptions();\n    _lastPercent: number = 0;\n    _gradientUUID: string = null;\n    render = () => {\n\n        this.applyOptions();\n\n        if (this.options.lazy) {\n            // Draw svg if it doesn't exist\n            this.svgElement === null && this.draw(this._lastPercent);\n            // Draw it only when it's in the viewport\n            if (this.isInViewport) {\n                // Draw it at the latest position when I am in.\n                if (this.options.animation && this.options.animationDuration > 0) {\n                    this.animate(this._lastPercent, this.options.percent);\n                } else {\n                    this.draw(this.options.percent);\n                }\n                this._lastPercent = this.options.percent;\n            }\n        } else {\n            if (this.options.animation && this.options.animationDuration > 0) {\n                this.animate(this._lastPercent, this.options.percent);\n            } else {\n                this.draw(this.options.percent);\n            }\n            this._lastPercent = this.options.percent;\n        }\n    };\n    polarToCartesian = (centerX: number, centerY: number, radius: number, angleInDegrees: number) => {\n        let angleInRadius = angleInDegrees * Math.PI / 180;\n        let x = centerX + Math.sin(angleInRadius) * radius;\n        let y = centerY - Math.cos(angleInRadius) * radius;\n        return { x: x, y: y };\n    };\n    draw = (percent: number) => {\n        // make percent reasonable\n        percent = (percent === undefined) ? this.options.percent : Math.abs(percent);\n        // circle percent shouldn't be greater than 100%.\n        let circlePercent = (percent > 100) ? 100 : percent;\n        // determine box size\n        let boxSize = this.options.radius * 2 + this.options.outerStrokeWidth * 2;\n        if (this.options.showBackground) {\n            boxSize += (this.options.backgroundStrokeWidth * 2 + this.max(0, this.options.backgroundPadding * 2));\n        }\n        // the centre of the circle\n        let centre = { x: boxSize / 2, y: boxSize / 2 };\n        // the start point of the arc\n        let startPoint = { x: centre.x, y: centre.y - this.options.radius };\n        // get the end point of the arc\n        let endPoint = this.polarToCartesian(centre.x, centre.y, this.options.radius, 360 * (this.options.clockwise ?\n            circlePercent :\n            (100 - circlePercent)) / 100);  // ####################\n        // We'll get an end point with the same [x, y] as the start point when percent is 100%, so move x a little bit.\n        if (circlePercent === 100) {\n            endPoint.x = endPoint.x + (this.options.clockwise ? -0.01 : +0.01);\n        }\n        // largeArcFlag and sweepFlag\n        let largeArcFlag: any, sweepFlag: any;\n        if (circlePercent > 50) {\n            [largeArcFlag, sweepFlag] = this.options.clockwise ? [1, 1] : [1, 0];\n        } else {\n            [largeArcFlag, sweepFlag] = this.options.clockwise ? [0, 1] : [0, 0];\n        }\n        // percent may not equal the actual percent\n        let titlePercent = this.options.animateTitle ? percent : this.options.percent;\n        let titleTextPercent = titlePercent > this.options.maxPercent ?\n            `${this.options.maxPercent.toFixed(this.options.toFixed)}+` : titlePercent.toFixed(this.options.toFixed);\n        let subtitlePercent = this.options.animateSubtitle ? percent : this.options.percent;\n        // get title object\n        let title = {\n            x: centre.x,\n            y: centre.y,\n            textAnchor: 'middle',\n            color: this.options.titleColor,\n            fontSize: this.options.titleFontSize,\n            fontWeight: this.options.titleFontWeight,\n            texts: [],\n            tspans: []\n        };\n        // from v0.9.9, both title and titleFormat(...) may be an array of string.\n        if (this.options.titleFormat !== undefined && this.options.titleFormat.constructor.name === 'Function') {\n            let formatted = this.options.titleFormat(titlePercent);\n            if (formatted instanceof Array) {\n                title.texts = [...formatted];\n            } else {\n                title.texts.push(formatted.toString());\n            }\n        } else {\n            if (this.options.title === 'auto') {\n                title.texts.push(titleTextPercent);\n            } else {\n                if (this.options.title instanceof Array) {\n                    title.texts = [...this.options.title]\n                } else {\n                    title.texts.push(this.options.title.toString());\n                }\n            }\n        }\n        // get subtitle object\n        let subtitle = {\n            x: centre.x,\n            y: centre.y,\n            textAnchor: 'middle',\n            color: this.options.subtitleColor,\n            fontSize: this.options.subtitleFontSize,\n            fontWeight: this.options.subtitleFontWeight,\n            texts: [],\n            tspans: []\n        }\n        // from v0.9.9, both subtitle and subtitleFormat(...) may be an array of string.\n        if (this.options.subtitleFormat !== undefined && this.options.subtitleFormat.constructor.name === 'Function') {\n            let formatted = this.options.subtitleFormat(subtitlePercent);\n            if (formatted instanceof Array) {\n                subtitle.texts = [...formatted];\n            } else {\n                subtitle.texts.push(formatted.toString());\n            }\n        } else {\n            if (this.options.subtitle instanceof Array) {\n                subtitle.texts = [...this.options.subtitle]\n            } else {\n                subtitle.texts.push(this.options.subtitle.toString());\n            }\n        }\n        // get units object\n        let units = {\n            text: `${this.options.units}`,\n            fontSize: this.options.unitsFontSize,\n            fontWeight: this.options.unitsFontWeight,\n            color: this.options.unitsColor\n        };\n        // get total count of text lines to be shown\n        let rowCount = 0, rowNum = 1;\n        this.options.showTitle && (rowCount += title.texts.length);\n        this.options.showSubtitle && (rowCount += subtitle.texts.length);\n        // calc dy for each tspan for title\n        if (this.options.showTitle) {\n            for (let span of title.texts) {\n                title.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) });\n                rowNum++;\n            }\n        }\n        // calc dy for each tspan for subtitle\n        if (this.options.showSubtitle) {\n            for (let span of subtitle.texts) {\n                subtitle.tspans.push({ span: span, dy: this.getRelativeY(rowNum, rowCount) })\n                rowNum++;\n            }\n        }\n        // create ID for gradient element\n        if (null === this._gradientUUID) {\n            this._gradientUUID = this.uuid();\n        }\n        // Bring it all together\n        this.svg = {\n            viewBox: `0 0 ${boxSize} ${boxSize}`,\n            // Set both width and height to '100%' if it's responsive\n            width: this.options.responsive ? '100%' : boxSize,\n            height: this.options.responsive ? '100%' : boxSize,\n            backgroundCircle: {\n                cx: centre.x,\n                cy: centre.y,\n                r: this.options.radius + this.options.outerStrokeWidth / 2 + this.options.backgroundPadding,\n                fill: this.options.backgroundColor,\n                fillOpacity: this.options.backgroundOpacity,\n                stroke: this.options.backgroundStroke,\n                strokeWidth: this.options.backgroundStrokeWidth,\n            },\n            path: {\n                // A rx ry x-axis-rotation large-arc-flag sweep-flag x y (https://developer.mozilla.org/en/docs/Web/SVG/Tutorial/Paths#Arcs)\n                d: `M ${startPoint.x} ${startPoint.y}\n        A ${this.options.radius} ${this.options.radius} 0 ${largeArcFlag} ${sweepFlag} ${endPoint.x} ${endPoint.y}`,\n                stroke: this.options.outerStrokeColor,\n                strokeWidth: this.options.outerStrokeWidth,\n                strokeLinecap: this.options.outerStrokeLinecap,\n                fill: 'none'\n            },\n            circle: {\n                cx: centre.x,\n                cy: centre.y,\n                r: this.options.radius - this.options.space - this.options.outerStrokeWidth / 2 - this.options.innerStrokeWidth / 2,\n                fill: 'none',\n                stroke: this.options.innerStrokeColor,\n                strokeWidth: this.options.innerStrokeWidth,\n            },\n            title: title,\n            units: units,\n            subtitle: subtitle,\n            image: {\n                x: centre.x - this.options.imageWidth / 2,\n                y: centre.y - this.options.imageHeight / 2,\n                src: this.options.imageSrc,\n                width: this.options.imageWidth,\n                height: this.options.imageHeight,\n            },\n            outerLinearGradient: {\n                id: 'outer-linear-' + this._gradientUUID,\n                colorStop1: this.options.outerStrokeColor,\n                colorStop2: this.options.outerStrokeGradientStopColor === 'transparent' ? '#FFF' : this.options.outerStrokeGradientStopColor,\n            },\n            radialGradient: {\n                id: 'radial-' + this._gradientUUID,\n                colorStop1: this.options.backgroundColor,\n                colorStop2: this.options.backgroundGradientStopColor === 'transparent' ? '#FFF' : this.options.backgroundGradientStopColor,\n            }\n        };\n    };\n    getAnimationParameters = (previousPercent: number, currentPercent: number) => {\n        const MIN_INTERVAL = 10;\n        let times: number, step: number, interval: number;\n        let fromPercent = this.options.startFromZero ? 0 : (previousPercent < 0 ? 0 : previousPercent);\n        let toPercent = currentPercent < 0 ? 0 : this.min(currentPercent, this.options.maxPercent);\n        let delta = Math.abs(Math.round(toPercent - fromPercent));\n\n        if (delta >= 100) {\n            // we will finish animation in 100 times\n            times = 100;\n            if (!this.options.animateTitle && !this.options.animateSubtitle) {\n                step = 1;\n            } else {\n                // show title or subtitle animation even if the arc is full, we also need to finish it in 100 times.\n                step = Math.round(delta / times);\n            }\n        } else {\n            // we will finish in as many times as the number of percent.\n            times = delta;\n            step = 1;\n        }\n        // Get the interval of timer\n        interval = Math.round(this.options.animationDuration / times);\n        // Readjust all values if the interval of timer is extremely small.\n        if (interval < MIN_INTERVAL) {\n            interval = MIN_INTERVAL;\n            times = this.options.animationDuration / interval;\n            if (!this.options.animateTitle && !this.options.animateSubtitle && delta > 100) {\n                step = Math.round(100 / times);\n            } else {\n                step = Math.round(delta / times);\n            }\n        }\n        // step must be greater than 0.\n        if (step < 1) {\n            step = 1;\n        }\n        return { times: times, step: step, interval: interval };\n    };\n    animate = (previousPercent: number, currentPercent: number) => {\n        if (this._timerSubscription && !this._timerSubscription.closed) {\n            this._timerSubscription.unsubscribe();\n        }\n        let fromPercent = this.options.startFromZero ? 0 : previousPercent;\n        let toPercent = currentPercent;\n        let { step: step, interval: interval } = this.getAnimationParameters(fromPercent, toPercent);\n        let count = fromPercent;\n        if (fromPercent < toPercent) {\n            this._timerSubscription = timer(0, interval).subscribe(() => {\n                count += step;\n                if (count <= toPercent) {\n                    if (!this.options.animateTitle && !this.options.animateSubtitle && count >= 100) {\n                        this.draw(toPercent);\n                        this._timerSubscription.unsubscribe();\n                    } else {\n                        this.draw(count);\n                    }\n                } else {\n                    this.draw(toPercent);\n                    this._timerSubscription.unsubscribe();\n                }\n            });\n        } else {\n            this._timerSubscription = timer(0, interval).subscribe(() => {\n                count -= step;\n                if (count >= toPercent) {\n                    if (!this.options.animateTitle && !this.options.animateSubtitle && toPercent >= 100) {\n                        this.draw(toPercent);\n                        this._timerSubscription.unsubscribe();\n                    } else {\n                        this.draw(count);\n                    }\n                } else {\n                    this.draw(toPercent);\n                    this._timerSubscription.unsubscribe();\n                }\n            });\n        }\n    };\n    emitClickEvent = (event: any) => {\n        if (this.options.renderOnClick) {\n            this.animate(0, this.options.percent);\n        }\n        this.onClick.emit(event);\n    };\n    private _timerSubscription: Subscription;\n    private applyOptions = () => {\n        // the options of <circle-progress> may change already\n        for (let name of Object.keys(this.options)) {\n            if (this.hasOwnProperty(name) && this[name] !== undefined) {\n                this.options[name] = this[name];\n            } else if (this.templateOptions && this.templateOptions[name] !== undefined) {\n                this.options[name] = this.templateOptions[name];\n            }\n        }\n        // make sure key options valid\n        this.options.radius = Math.abs(+this.options.radius);\n        this.options.space = +this.options.space;\n        this.options.percent = +this.options.percent > 0 ? +this.options.percent : 0;\n        this.options.maxPercent = Math.abs(+this.options.maxPercent);\n        this.options.animationDuration = Math.abs(this.options.animationDuration);\n        this.options.outerStrokeWidth = Math.abs(+this.options.outerStrokeWidth);\n        this.options.innerStrokeWidth = Math.abs(+this.options.innerStrokeWidth);\n        this.options.backgroundPadding = +this.options.backgroundPadding;\n    };\n    private getRelativeY = (rowNum: number, rowCount: number): string => {\n        // why '-0.18em'? It's a magic number when property 'alignment-baseline' equals 'baseline'. :)\n        let initialOffset = -0.18, offset = 1;\n        return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\n    };\n\n    private min = (a: number, b: number) => {\n        return a < b ? a : b;\n    };\n\n    private max = (a: number, b: number) => {\n        return a > b ? a : b;\n    };\n\n    private uuid = () => {\n        // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\n        var dt = new Date().getTime();\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    }\n\n    public isDrawing(): boolean {\n        return (this._timerSubscription && !this._timerSubscription.closed);\n    }\n\n    public findSvgElement = function () {\n        if (this.svgElement === null) {\n            let tags = this.elRef.nativeElement.getElementsByTagName('svg');\n            if (tags.length > 0) {\n                this.svgElement = tags[0];\n            }\n        }\n    }\n\n    private isElementInViewport(el): Boolean {\n        // Return false if el has not been created in page.\n        if (el === null || el === undefined) return false;\n        // Check if the element is out of view due to a container scrolling\n        let rect = el.getBoundingClientRect(), parent = el.parentNode, parentRect;\n        do {\n            parentRect = parent.getBoundingClientRect();\n            if (rect.top >= parentRect.bottom) return false;\n            if (rect.bottom <= parentRect.top) return false;\n            if (rect.left >= parentRect.right) return false;\n            if (rect.right <= parentRect.left) return false;\n            parent = parent.parentNode;\n        } while (parent != this.document.body);\n        // Check its within the document viewport\n        if (rect.top >= (this.window.innerHeight || this.document.documentElement.clientHeight)) return false;\n        if (rect.bottom <= 0) return false;\n        if (rect.left >= (this.window.innerWidth || this.document.documentElement.clientWidth)) return false;\n        if (rect.right <= 0) return false;\n        return true;\n    }\n\n    checkViewport = () => {\n        this.findSvgElement();\n        let previousValue = this.isInViewport;\n        this.isInViewport = this.isElementInViewport(this.svgElement);\n        if (previousValue !== this.isInViewport) {\n            this.onViewportChanged.emit({ oldValue: previousValue, newValue: this.isInViewport });\n        }\n    }\n\n    onScroll = (event: Event) => {\n        this.checkViewport();\n    }\n\n    loadEventsForLazyMode = () => {\n        if (this.options.lazy) {\n            this.document.addEventListener('scroll', this.onScroll, true);\n            this.window.addEventListener('resize', this.onScroll, true);\n            if (this._viewportChangedSubscriber === null) {\n                this._viewportChangedSubscriber = this.onViewportChanged.subscribe(({ oldValue, newValue }) => {\n                    newValue ? this.render() : null;\n                });\n            }\n            // svgElement must be created in DOM before being checked.\n            // Is there a better way to check the existence of svgElemnt?\n            let _timer = timer(0, 50).subscribe(() => {\n                this.svgElement === null ? this.checkViewport() : _timer.unsubscribe();\n            })\n        }\n    }\n\n    unloadEventsForLazyMode = () => {\n        // Remove event listeners\n        this.document.removeEventListener('scroll', this.onScroll, true);\n        this.window.removeEventListener('resize', this.onScroll, true);\n        // Unsubscribe onViewportChanged\n        if (this._viewportChangedSubscriber !== null) {\n            this._viewportChangedSubscriber.unsubscribe();\n            this._viewportChangedSubscriber = null;\n        }\n    }\n\n    ngOnInit() {\n        this.loadEventsForLazyMode();\n    }\n\n    ngOnDestroy() {\n        this.unloadEventsForLazyMode();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n\n        this.render();\n\n        if ('lazy' in changes) {\n            changes.lazy.currentValue ? this.loadEventsForLazyMode() : this.unloadEventsForLazyMode();\n        }\n\n    }\n\n    constructor(defaultOptions: CircleProgressOptions, private elRef: ElementRef, @Inject(DOCUMENT) private document: any) {\n        this.document = document;\n        this.window = this.document.defaultView;\n        Object.assign(this.options, defaultOptions);\n        Object.assign(this.defaultOptions, defaultOptions);\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CircleProgressComponent, CircleProgressOptionsInterface, CircleProgressOptions } from './ng-circle-progress.component';\n\n\n@NgModule({\n  declarations: [CircleProgressComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [CircleProgressComponent]\n})\nexport class NgCircleProgressModule {\n  static forRoot(options: CircleProgressOptionsInterface = {}): ModuleWithProviders<NgCircleProgressModule> {\n    return {\n      ngModule: NgCircleProgressModule,\n      providers: [\n        { provide: CircleProgressOptions, useValue: options }\n      ]\n    };\n  }\n}\n"]}